#!/bin/bash

# Text output colors
TXT_RED='\033[0;31m'
TXT_YELLOW='\033[1;33m'
TXT_GREEN='\033[0;32m'
TXT_NOCOLOR='\033[0m'

# Verify that AWS credentials are present
if [[ ! -f ~/.aws/credentials ]] 
then
    echo -e "${TXT_RED}ERROR:${TXT_NOCOLOR} AWS credentials are not present."
    echo -e "Please run the ${TXT_YELLOW}aws configure${TXT_NOCOLOR} command before running this script again."
    exit 1
fi

# Verify that AWS configuration settings are present
if [[ ! -f ~/.aws/config ]] 
then
    echo -e "${TXT_RED}ERROR:${TXT_NOCOLOR} AWS configuration settings are not present."
    echo -e "Please run the ${TXT_YELLOW}aws configure${TXT_NOCOLOR} command before running this script again."
    exit 1
fi

read -p 'Development Environment: ' dev_env
stack_name="zid-web-${dev_env}"
key_name="${stack_name}-ec2-key"

# Create EC2 key pair
aws ec2 create-key-pair --key-name ${key_name} --query 'KeyMaterial' --output text > ec2-private-key-${dev_env}.pem

if [[ $? -ne 0 ]] 
then
    echo -e "${TXT_RED}Error creating EC2 key pair.${TXT_NOCOLOR}"
    rm ec2-private-key-${dev_env}.pem
    exit 1
else
    echo -e "${TXT_GREEN}EC2 key pair successfully created.${TXT_NOCOLOR}"
fi

# Deploy the CloudFormation stack
aws cloudformation create-stack --template-body file://infrastructure-config.yaml --stack-name $stack_name --parameters file://parameters.json

if [[ $? -ne 0 ]] 
then
    echo -e "${TXT_RED}Error creating CloudFormation stack.${TXT_NOCOLOR}"
    aws ec2 delete-key-pair --key-name ${key_name}
    rm ec2-private-key-${dev_env}.pem
    exit 1
else
    echo -e "${TXT_GREEN}Success! CloudFormation stack provisioning complete.${TXT_NOCOLOR}"
    chmod 400 ec2-private-key-${dev_env}.pem
    exit 0
fi
