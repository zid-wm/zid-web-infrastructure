AWSTemplateFormatVersion: 2010-09-09

Description: "Backend server infrastructure for the vZID ARTCC website."

Parameters:
    InstanceType:
        Type: String
        Default: t2.micro
        Description: EC2 instance type.

Resources:
    ZidVpc:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            EnableDnsHostnames: true
            EnableDnsSupport: true
            InstanceTenancy: default
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-vpc
                - Key: Application
                  Value: !Sub ${AWS::StackName}
    
    ZidInternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-igw
                - Key: Application
                  Value: !Sub ${AWS::StackName}

    ZidGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref ZidVpc
            InternetGatewayId: !Ref ZidInternetGateway

    ZidRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref ZidVpc
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-rt
                - Key: Application
                  Value: !Sub ${AWS::StackName}

    ZidPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref ZidRouteTable
            DestinationCidrBlock: '0.0.0.0/0'
            GatewayId: !Ref ZidInternetGateway

    ZidNetworkAcl:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref ZidVpc
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-nacl
                - Key: Application
                  Value: !Sub ${AWS::StackName}

    ZidInboundTcpRules:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref ZidNetworkAcl
            RuleNumber: 100
            Protocol: 6 # tcp
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 0
                To: 65535
        
    ZidOutboundTcpRules:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref ZidNetworkAcl
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 0
                To: 65535

    ZidPublicSubnet:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref ZidVpc
            AvailabilityZone: !Select [ 0, !GetAZs ]
            CidrBlock: 10.0.1.0/24
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-subnet-a
                - Key: Application
                  Value: !Sub ${AWS::StackName}

    ZidSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref ZidPublicSubnet
            RouteTableId: !Ref ZidRouteTable

    ZidSubnetNaclAssociation:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            SubnetId: !Ref ZidPublicSubnet
            NetworkAclId: !Ref ZidNetworkAcl

    ZidSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable HTTP, HTTPS, and SSH access to EC2 instance
            GroupName: !Sub ${AWS::StackName}-sg
            VpcId: !Ref ZidVpc
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 443
                  ToPort: 443
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-sg
                - Key: Application
                  Value: !Sub ${AWS::StackName}

    ZidSgBaseIngress:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            GroupId: !Ref ZidSecurityGroup
            IpProtocol: -1
            FromPort: -1
            ToPort: -1
            SourceSecurityGroupId: !Ref ZidSecurityGroup

    ZidServerInstance:
        Type: AWS::EC2::Instance
        Properties:
            InstanceType: !Ref InstanceType
            SubnetId: !Ref ZidPublicSubnet
            SecurityGroupIds:
                - !Ref ZidSecurityGroup
            KeyName: !Sub ${AWS::StackName}-ec2-key
            ImageId: ami-0c94855ba95c71c99
            UserData: 
                Fn::Base64: |
                    #!/bin/bash -xe
                    yum update -y
                    yum install -y httpd
                    systemctl start httpd
                    systemctl enable httpd
                    echo "Hello World" > /var/www/html/index.html
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}-ec2
                - Key: Application
                  Value: !Sub ${AWS::StackName}

Outputs:
    PublicDNS:
        Description: Public DNS name of the EC2 instance
        Value: !GetAtt ZidServerInstance.PublicDnsName
    PublicIP:
        Description: Public IP address of the EC2 instance
        Value: !GetAtt ZidServerInstance.PublicIp